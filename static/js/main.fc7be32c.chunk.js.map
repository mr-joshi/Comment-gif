{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","butgif","Setbutgif","inputgif","Setinputgif","onSubmit","e","preventDefault","className","placeholder","value","onChange","target","name","onClick","style","marginTop","apiKey","onSelect","item","src","images","downsized","url","width","handleChangegif","masonryConfig","columns","imageWidth","gutter","mq","console","log","id","Math","floor","random","text","gif","Todo","todos","completeTodo","removeTodo","edit","setEdit","map","todo","index","isComplete","TodoList","setTodos","newTodos","removedArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LA4GeA,MAxGf,SAAkBC,GAChB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAoDA,OACE,sBAAMC,SApCgB,SAAAC,GACpBA,EAAEC,kBAmC2BC,UAAU,YAAzC,SAGI,qCACE,uBACEC,YAAY,WACZC,MAAOX,EACPY,SAtDW,SAAAL,GACnBN,EAASM,EAAEM,OAAOF,QAsDVG,KAAK,OACLL,UAAU,eAMf,uBAEG,wBAAQM,QAAS,kBAAMZ,GAAWD,IAASc,MAAO,CAACC,UAAU,QAASR,UAAU,cAAhF,iBAOA,qBAAKA,UAAWP,EAAO,mBAAmB,sBAA1C,SACM,cAAC,IAAD,CACEgB,OAAO,mCACPC,SAAU,SAACC,GAAD,OAtEF,SAACA,GACvBf,EAAY,qBAAKgB,IAAKD,EAAKE,OAAOC,UAAUC,IAAKC,MAAM,WAqEtBC,CAAgBN,IAEnCO,cAAe,CACb,CAAEC,QAAS,EAAGC,WAAY,IAAKC,OAAQ,GACvC,CAAEC,GAAI,QAASH,QAAS,EAAGC,WAAY,IAAKC,OAAQ,QAI9D,qBAAKT,IAAKjB,IACV,uBAIA,wBAAQY,MAAO,CAACC,UAAU,QAASF,QAxEtB,SAAAR,GACnBA,EAAEC,iBACFwB,QAAQC,IAAIjC,IACRA,GAAUI,KAIdN,EAAMQ,SAAS,CACb4B,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMtC,EACNuC,IAAKnC,IAUPH,EAAS,IACTI,EAAY,IACZF,EAAU,KAkDsDM,UAAU,cAApE,+B,QCzDK+B,EAtCF,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WACnC,EAAwB5C,mBAAS,CAC/BmC,GAAI,KACJvB,MAAO,KAFT,mBAAOiC,EAAP,KAAaC,EAAb,KAaA,OAAID,EAAKV,GACA,cAAC,EAAD,CAAUU,KAAMA,EAAMtC,SATV,SAAAK,GAEnBkC,EAAQ,CACNX,GAAI,KACJvB,MAAO,QAQJ8B,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACf,sBACEvC,UAAWsC,EAAKE,WAAa,oBAAsB,WADrD,UAIE,sBAAKxC,UAAU,UAAwBM,QAAS,kBAAM2B,EAAaK,EAAKb,KAAxE,UACGa,EAAKR,IACN,sBAAM9B,UAAU,cAAhB,SAA+BsC,EAAKT,SAFRS,EAAKb,IAInC,qBAAKzB,UAAU,QAAf,SACE,cAAC,IAAD,CACEM,QAAS,kBAAM4B,EAAWI,EAAKb,KAC/BzB,UAAU,oBATTuC,OCsBIE,MA5Cf,WACE,MAA0BnD,mBAAS,IAAnC,mBAAO0C,EAAP,KAAcU,EAAd,KA6BA,OACE,qCACE,8CACA,cAAC,EAAD,CAAU7C,SA9BE,SAAAyC,GAGd,IAAMK,EAAQ,sBAAQX,GAAR,CAAcM,IAE5BI,EAASC,MA0BP,cAAC,EAAD,CACEX,MAAOA,EACPC,aAhBe,SAAAR,GACAO,EAAMK,KAAI,SAAAC,GACvBA,EAAKb,KAAOA,IACda,EAAKE,YAAcF,EAAKE,gBAcxBN,WAvBa,SAAAT,GACjB,IAAMmB,EAAa,YAAIZ,GAAOa,QAAO,SAAAP,GAAI,OAAIA,EAAKb,KAAOA,KAEzDiB,EAASE,UCPEE,MATf,WACE,OACE,qBAAK9C,UAAU,WAAf,SACE,cAAC,EAAD,OCJN+C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc7be32c.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Gif from './Gif';\r\nimport ReactGiphySearchbox from \"react-giphy-searchbox\";\r\n\r\nfunction TodoForm(props) {\r\n  const [input, setInput] = useState('');\r\n  const [butgif, Setbutgif] = useState(0);\r\n  const [inputgif, Setinputgif] = useState('');\r\n\r\n\r\n\r\n\r\n\r\n  const handleChange = e => {\r\n    setInput(e.target.value);\r\n    \r\n  };\r\n  const handleChangegif = (item)=> {\r\n    Setinputgif(<img src={item.images.downsized.url} width=\"100px\" />);\r\n  \r\n    \r\n\r\n    \r\n  };\r\n    const handlesSubmit = e => {\r\n      e.preventDefault();\r\n    }\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    console.log(input )\r\n    if(!input && !inputgif){\r\n      return;\r\n    }\r\n\r\n    props.onSubmit({\r\n      id: Math.floor(Math.random() * 10000),\r\n      text: input,\r\n      gif: inputgif,\r\n      \r\n      \r\n  \r\n\r\n   \r\n   \r\n      \r\n    });\r\n    \r\n    setInput('');\r\n    Setinputgif('')\r\n    Setbutgif(0)\r\n   \r\n  };\r\n\r\n\r\n\r\n    \r\n\r\n\r\n  return (\r\n    <form onSubmit={handlesSubmit} className='todo-form'>\r\n    \r\n      \r\n        <>\r\n          <input\r\n            placeholder='Add Text'\r\n            value={input}\r\n            onChange={handleChange}\r\n            name='text'\r\n            className='todo-input'\r\n            \r\n          />\r\n                 \r\n\r\n    \r\n       <br/>\r\n    \r\n          <button onClick={() => Setbutgif(!butgif)} style={{marginTop:\"20px\"}} className='todo-button'>\r\n            Gif\r\n          </button>\r\n\r\n\r\n\r\n\r\n          <div className={butgif?\"searchboxWrapper\":\"searchboxWrappernot\"}>\r\n                <ReactGiphySearchbox\r\n                  apiKey=\"9Ixlv3DWC1biJRI57RanyL7RTbfzz0o7\"\r\n                  onSelect={(item) =>handleChangegif(item)}\r\n               \r\n                  masonryConfig={[\r\n                    { columns: 2, imageWidth: 110, gutter: 5 },\r\n                    { mq: \"700px\", columns: 3, imageWidth: 120, gutter: 5 }\r\n                  ]}\r\n                />\r\n          </div>\r\n          <img src={inputgif}/>\r\n          <br/>\r\n\r\n\r\n\r\n          <button style={{marginTop:\"20px\"}} onClick={handleSubmit} className='todo-button'>\r\n            Add Comment\r\n          </button> \r\n          </>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport { RiCloseCircleLine } from 'react-icons/ri';\r\nimport { TiEdit } from 'react-icons/ti';\r\n\r\nconst Todo = ({ todos, completeTodo, removeTodo }) => {\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });   \r\n\r\n  const submitUpdate = value => {\r\n  \r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  };\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\r\n  }\r\n\r\n  return todos.map((todo, index) => (\r\n    <div\r\n      className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n      key={index}\r\n    >\r\n      <div className=\"comment\" key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n        {todo.gif}\r\n        <span className=\"commentText\">{todo.text}</span>\r\n      </div>\r\n      <div className='icons'>\r\n        <RiCloseCircleLine\r\n          onClick={() => removeTodo(todo.id)}\r\n          className='delete-icon'\r\n        />\r\n        \r\n      </div>\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport Todo from './Todo';\r\n\r\nfunction TodoList() {\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  const addTodo = todo => {\r\n   \r\n\r\n    const newTodos = [ ...todos,todo];\r\n\r\n    setTodos(newTodos);\r\n  \r\n  };\r\n\r\n \r\n\r\n  const removeTodo = id => {\r\n    const removedArr = [...todos].filter(todo => todo.id !== id);\r\n\r\n    setTodos(removedArr);\r\n  };\r\n\r\n  const completeTodo = id => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      \r\n    });\r\n    \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Text and Gif</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo\r\n        todos={todos}\r\n        completeTodo={completeTodo}\r\n        removeTodo={removeTodo}\r\n        \r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React from 'react';\nimport './App.css';\nimport TodoList from './components/TodoList';\nimport Gif from './components/Gif';\n\nfunction App() {\n  return (\n    <div className='todo-app'>\n      <TodoList />\n \n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}